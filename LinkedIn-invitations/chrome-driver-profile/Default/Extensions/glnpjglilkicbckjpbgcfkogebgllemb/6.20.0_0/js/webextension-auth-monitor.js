Okta.AuthenticationMonitor=function(r,a){var t=Okta.Q;var e=Okta._okta;var i=e.delay;var o=e.each;var n=e.find;var u=e.last;var s=Okta.fn.url.getOktaFederatedRequestMatchPatterns;var d=Okta.fn.url.isAllowedOktaRequestForAuthMonitoring;var l=Okta.fn.url.isOktaFederalDomain;var f=false;var c=false;var m=false;var h={};var g=20;var v=2e4;var p={};function b(e){return p[e]}function L(e,t){p[e]=t}function R(e){delete p[e]}function w(e,t){if(!t||!e){return}t.push({url:e.url,startTimeStamp:e.timeStamp});L(e.tabId,t)}function q(e,t){var r=u(t);r.method=e.method;r.statusCode=e.statusCode;r.endTimeStamp=e.timeStamp;r.responseTimeMs=Math.round(r.endTimeStamp-r.startTimeStamp);r.error=e.error;L(e.tabId,t)}function S(i){var o="AuthenticationMonitor::logInteraction: ";return t.all([r.getOktaDomain(),r.getVersion(),r.getSessionCookie()]).spread(function(e,t,r){if(!e){Log.warn(o+"Failed to find Okta domain from persistent storage. Not "+"logging interaction");return}if(!t){Log.warn(o+"Failed to find plugin version from persistent storage. Not "+"logging interaction");return}if(!r||(!r.sid||!r.DT)&&!r.idx){Log.warn(o+"Failed to find a valid Okta session. Not logging interaction");return}var n={Accept:"application/json;charset=utf-8"};if(r.idx){n["X-Okta-Idx-Session-Jwe"]=r.idx}else{n["Plugin-Sid"]=r.sid;n["X-Session-Id"]=r.sid;n["X-Device-Token"]=r.DT}Log.info(o+"Logging auth failure interaction");a.ajax({url:e+"/api/plugin/2/log?plugin_version="+t.backgroundVersion+"-"+t.contentVersion,type:"POST",headers:n,data:{message:i,logLevel:"INFO"}})})}function O(t){return r.getOktaDomain().then(function(e){if(!e){return false}if(!t||!t.url||t.url.indexOf(e)!==0){return false}if(!d(t.url)){return false}return true})}function k(e,t,r){var n="Auth Interaction: ";o(e,function(e,t){e.startTimeStamp=undefined;e.endTimeStamp=undefined;e.url=t===0||m?encodeURI(e.url):undefined});n+=JSON.stringify(e);R(t);if(!r||c){return S(n)}}function T(e){if(!e||!e.transitionQualifiers){return false}if(e.transitionType==="link"&&e.transitionQualifiers.length>0&&e.transitionQualifiers[0]==="server_redirect"){return false}return e.transitionType==="auto_subframe"||!!n(e.transitionQualifiers,function(e){return e==="client_redirect"||e==="server_redirect"})}function I(e){if(!e||!e.transitionQualifiers){return false}return e.transitionType==="typed"||e.transitionType==="auto_bookmark"||e.transitionType==="reload"}function y(){if(!chrome.webRequest.onSendHeaders||!chrome.webRequest.onCompleted||!chrome.webRequest.onBeforeRedirect||!chrome.webRequest.onErrorOccurred||!chrome.webNavigation.onCommitted||!chrome.tabs.onRemoved){Log.warn("AuthenticationMonitor::isSupported: Current version of "+"the browser does not support this functionality");return false}return true}function A(t){return O(t).then(function(e){e&&w(t,[])})}function C(r){return O(r).then(function(e){if(!e){return}var t=b(r.tabId);if(!t||t.length===0){return}q(r,t);if(r.statusCode>=400||r.error){k(t,r.tabId,false);return}})}function _(e){var t=b(e.tabId);if(!t||t.length===0){return}if(t.length===1&&t[0].url===e.url){return}w(e,t)}function M(t){var e=b(t.tabId);if(!e||e.length===0){return}var r=e.length;if(r===1&&e[0].url===t.url){return}if(r===2&&t.method!=="POST"){R(t.tabId);return}var n=u(e);if(n.url!==t.url){w({timeStamp:n.endTimeStamp,url:t.url},e);n=u(e);r++}if(r===g){n.oktaError="request queue reached maximum capacity of "+g+" web requests"}q(t,e);if(t.statusCode>=400||t.error||r===g){return k(e,t.tabId,false)}if((t.method==="GET"||t.method==="POST")&&t.statusCode<300){i(function(){var e=b(t.tabId);if(!e){return}if(e.length>r){return}k(e,t.tabId,true)},v)}}function D(e){var t=b(e.tabId);if(!t||t.length<=2){return}if(I(e)){R(e.tabId);return}if(!T(e)){t.pop();return k(t,e.tabId,true)}}function E(e){R(e)}function F(){if(!f){Log.info("AuthenticationMonitor::removeRequestListeners: "+"no listeners are attached to be removed");return}chrome.webRequest.onSendHeaders.removeListener(A);chrome.webRequest.onCompleted.removeListener(C);chrome.webRequest.onErrorOccurred.removeListener(C);chrome.webRequest.onSendHeaders.removeListener(_);chrome.webRequest.onBeforeRedirect.removeListener(M);chrome.webRequest.onCompleted.removeListener(M);chrome.webRequest.onErrorOccurred.removeListener(M);chrome.webNavigation.onCommitted.removeListener(D);chrome.tabs.onRemoved.removeListener(E);f=false;Log.info("AuthenticationMonitor::removeRequestListeners: "+"removed all listeners")}function N(){if(f){Log.info("AuthenticationMonitor::addRequestListeners: "+"listeners already attached");return}var e=s();chrome.webRequest.onSendHeaders.addListener(A,{urls:e},["requestHeaders"]);chrome.webRequest.onCompleted.addListener(C,{urls:e});chrome.webRequest.onErrorOccurred.addListener(C,{urls:e});chrome.webRequest.onSendHeaders.addListener(_,{urls:["<all_urls>"],types:["main_frame"]},["requestHeaders"]);chrome.webRequest.onBeforeRedirect.addListener(M,{urls:["<all_urls>"],types:["main_frame"]});chrome.webRequest.onCompleted.addListener(M,{urls:["<all_urls>"],types:["main_frame"]});chrome.webRequest.onErrorOccurred.addListener(M,{urls:["<all_urls>"],types:["main_frame"]});chrome.webNavigation.onCommitted.addListener(D);chrome.tabs.onRemoved.addListener(E);f=true;Log.info("AuthenticationMonitor::addRequestListeners: "+"added all listeners")}h.initialize=function(e){c=!!e;if(!y()){return}return t.all([r.getPluginSettings(),r.getOktaDomain()]).spread(function(e,t){if(e&&e.orgSettings&&e.orgSettings.pluginAuthFailureDetectionEnabled&&!l(t)){N();m=e.orgSettings.pluginAuthFailureDetectionShowUrlEnabled;return}Log.info("AuthenticationMonitor::initialize: Auth monitoring feature "+"is disabled or on federal org");F();return})};return h};